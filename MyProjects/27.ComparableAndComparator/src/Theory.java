public class Theory {
    /*
    # Интерфейсы  Comparable <V> и Comparator<V>

    *В задачах сортировки списка элементов неизвестного типа возникает проблема определения правила сравнения двух элементов

    *Критерий сравнения двух объектов (не проверка эквивалентности!) в Java описывается с помощью интерфейса Comparable

    *В классе Comparable определен метод

    int compareTo(T o);

    *Данный метод должен быть реализован в классе, по правилу:

    - возвращает отрицательное число, если объект который вызвал метод, меньше объекта на которым был вызван метод.
    - возвращает нуль, если объект, который вызвал метод, равен объекту, над которым был вызван метод
    - возвращает положительное число, если объект который вызвал метод, больше объекта,над которым был вызван метод.

    #Памаметризованный метод, использующий ограничение Comparable для списка. То есть каждый элемент списка должен
    реализовывать Comparable.

     public static <T extends Comparable<T>> void sort(ArrayList<T> list);

    * Проблема Comparable - пусть вам предоставили класс, в котором реализован метод compareTo, но не так, как вам надо.
    Данная проблема решается с помощью Comparator

    int compare(T o1, T o2)

    *Интерфейс Comparator позволяет определять классы, в которых описана логика сравнения двух объектов.

     */
}
