public class Theory {
    /*
    # Итератор

    * Паттерн, представляющий собой некоторый объект, который последовательно проходит коллекцию от начала до конца.


    * Объект должен иметь методы для проверки наличия следующего элемента и для получения следующего элемента.

    ##Встроенные интерфейсы для рабооты с итерированием

    * Какая коллекция является итерируемой?
    Та, что представляет итератор

    *Iterable<T>
    public interface Iterable<T>{
    Iterator<T>iterator();
    }
        *Что такое итератор? Курсор, который может дать следующий элемент и проверить есть ли следующий.

        public interface Iterator<E> {
        boolean hasNext();
        E next();

        Как следует реализовывать итератор?

        *В виде внутреннего и не статичного класса. Почему?

        - Объект итератора не имеет смысла без объекта объекта коллекции.
        -private - потому что вы не должны показывать структуру списка (инкапсуляция.)
     */
}
